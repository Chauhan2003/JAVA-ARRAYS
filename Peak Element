// Find a peak element which is not smaller than its neighbours

import java.util.*;

public class Main {
    public static void main(String[] args) {
        int[] arr = {7, 12, 34, 12, 11, 4, 1};
        int n = arr.length;

        int peak = functionPeak(arr, n);

        System.out.print(peak);
    }

    public static int functionPeak(int[] arr, int n) {
        int low = 0;
        int high = n - 1;
        int res = 0;

        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (mid == n-1 || mid == 0 || (arr[mid] > arr[mid + 1] && arr[mid] > arr[mid - 1])) {
                res = arr[mid];
                break;
            } else if (arr[mid] < arr[mid + 1]) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return res;
    }
}



















